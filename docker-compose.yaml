version: '2'

services:
  spacy-service:
    image: deciphernow/spacy-service
    hostname: spacy
    # networks:
    #   default:
    #     aliases:
    #     - spacy-service
    #     - spacy
    container_name: spacy-container
    ports:
      - 9000:9000
    environment:
      - LOG_LEVEL=DEBUG

  proxier:
    image: nginx:1.13
    environment:
      - SPACY_SERVICE_HOST=spacy-service
      - SPACY_SERVICE_PORT=9000

    volumes:
      - ./docker/proxier:/tmp/docker
    ports:
      - '47080:80'
      - '8080:443'
      - '2222:22'
    depends_on:
      - spacy-service
    # The envsubst command will swap out anything in the input file that begins with $ with a corresponding env
    # variable, or if one can't be found, an empty string. Since nginx conf files also make use of $-prefixed
    # variables, we will pass in the specific variables we want envsubst to replace (this is called the "shell
    # format" argument). Also note that we need to escape our $-prefixed variables, docker-compose style, to
    # prevent docker-compose from trying to replace the variables (i.e., $VAR becomes $$VAR).
    # end of command: < /tmp/docker/odrive.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
    # command: /bin/bash -c "env && envsubst '$$ODRIVE_SERVICE_HOST $$ODRIVE_SERVICE_PORT $$FINDER_EXTERNAL_IP $$FINDER_HOST $$FINDER_PORT $$AAC_SERVICE_HOST $$AAC_SERVICE_PORT $$CTE_APPS_SERVICE_HOST $$CTE_APPS_SERVICE_PORT $$CTE_USER_SERVICE_HOST $$CTE_USER_SERVICE_PORT' < /tmp/docker/odrive.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    command: /bin/bash -c "env && envsubst '$$SPACY_SERVICE_HOST $$SPACY_SERVICE_PORT' < /tmp/docker/nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
